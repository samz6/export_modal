{"version":3,"file":"index.js","sources":["../src/components/CheckableItem.js","../src/components/exportModal/StyledExportModal.js","../src/components/exportModal/ExportModal.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  min-height: 20px;\n  width: 100%;\n  background-color: ${props => (props.selected ? \"#ccc\" : \"#fff\")};\n  font-weight: ${props => (props.selected ? \"bold\" : \"normal\")};\n  padding: 15px;\n  transition: all 0.4s ease;\n`;\n\nconst SelectIcon = styled(Icon)`\n  display: ${props => (props.selected ? \"block\" : \"none\")};\n`;\n\nconst styles = theme => ({});\n\nexport class CheckableItem extends React.Component {\n  clickHandler = () => {\n    this.props.onSelectionChange(!this.props.selected);\n  };\n\n  render() {\n    return (\n      <MainContainer selected={this.props.selected} onClick={this.clickHandler}>\n        <div>{this.props.label}</div>\n        <SelectIcon selected={this.props.selected}>done</SelectIcon>\n      </MainContainer>\n    );\n  }\n}\n\n// export default CheckableItem;\nconst CheckableItemWrapped = withStyles(styles)(CheckableItem);\n\nexport default CheckableItemWrapped;\n","import styled from \"styled-components\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport const IconButtonStyled = styled(IconButton)`\n  align-self: flex-end;\n  color: darkgray;\n  padding: 1rem;\n  margin-right: 0.5rem;\n`;\n\nexport const MainContainerStyled = styled(Paper)`\n  elevation: ${({ theme }) => theme.elevation};\n  margin: 0 1rem 2rem 1rem;\n  border-top: 5px solid teal;\n  box-shadow: 0px 2px 5px grey;\n`;\n\nexport const MyPaper = styled.div`\n  top: 0;\n  height: 100vh;\n  width: 50%;\n  min-height: 450px;\n  min-width: 500px;\n  right: 0px;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  position: absolute;\n  background-color: ${({ theme }) => theme.palette.background.paper};\n  box-shadow: ${({ theme }) => theme.shadows[5]};\n  padding: ${({ theme }) => theme.spacing.unit * 4};\n  outline: none;\n`;\n\nexport const ExportOptionHeaderStyled = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin: 1rem;\n`;\n\nexport const ExportOptionSelectStyled = styled(FormControl)`\n  width: 50%;\n`;\n\nexport const ExportFieldSelectionContainerStyled = styled.div`\n  margin: 3rem 1rem 1rem 1rem;\n`;\n\nexport const SelectionListContainerStyled = styled.div`\n  display: flex;\n  justify-items: flex-start;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const ColumnSelectionListStyled = styled(List)`\n  border: 1px solid darkgray;\n  margin-right: 0.5rem !important;\n  flex: 1;\n  max-height: calc(100vh - 230px);\n  overflow-y: scroll;\n`;\n\nexport const RegionSelectionListStyled = styled(List)`\n\n  border: 1px solid darkgray;\n  margin-left: 0.5rem !important;\n  flex: 1;\n  max-height: calc(100vh - 230px);\n  overflow-y: scroll;\n`;\n","import Chip from \"@material-ui/core/Chip\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Input from \"@material-ui/core/Input\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Select from \"@material-ui/core/Select\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport CheckableItem from \"../CheckableItem\";\nimport { ThemeProvider } from \"styled-components\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport {\n  IconButtonStyled,\n  ExportOptionHeaderStyled,\n  ExportOptionSelectStyled,\n  ExportFieldSelectionContainerStyled,\n  SelectionListContainerStyled,\n  ColumnSelectionListStyled,\n  RegionSelectionListStyled,\n  MainContainerStyled,\n  MyPaper\n} from \"./StyledExportModal\";\n\nconst styles = theme => ({\n  listItemOverride: {\n    padding: \"0\"\n  }\n});\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass ExportModal extends React.Component {\n  exportOptions = [\n    {\n      label: \"CSV\",\n      value: \"csv\"\n    },\n    {\n      label: \"Excel\",\n      value: \"xls\"\n    }\n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      selectedExportOption: [\"pdf\"],\n      selectedColumns: [],\n      columnsDetail: [\n        { columnName: \"Organization Name\", isSelected: true },\n        { columnName: \"Plan Code/Contract #\", isSelected: false },\n        { columnName: \"PBP\", isSelected: false },\n        { columnName: \"Segment\", isSelected: true },\n        { columnName: \"Plan Name\", isSelected: true },\n        { columnName: \"Product Type\", isSelected: false },\n        { columnName: \"Plan Type\", isSelected: false },\n        { columnName: \"Region\", isSelected: true },\n        { columnName: \"County\", isSelected: false },\n        { columnName: \"Current Enrollees\", isSelected: false }\n      ]\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      console.log(nextProps);\n      this.setState({\n        modalIsOpen: nextProps.modalProps.open\n      });\n    }\n  }\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  exportOptionOnChangeHandler = event => {\n    this.setState({\n      selectedExportOption: event.target.value\n    });\n  };\n\n  selectAllHandler = event => {\n    let columns = this.state.columnsDetail;\n    columns = columns.map(column => {\n      column.isSelected = true;\n      return column;\n    });\n\n    this.setState({ columnsDetail: columns });\n  };\n\n  columnSelectionHandler = selectedColumn => () => {\n    const currentIndex = this.state.columnsDetail.findIndex(\n      column => column.columnName === selectedColumn.columnName\n    );\n\n    const columns = this.state.columnsDetail;\n\n    columns[currentIndex].isSelected = !columns[currentIndex].isSelected;\n\n    this.setState({ ...this.state, columnsDetail: columns });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.modalIsOpen}\n          onClose={this.closeModal}\n        >\n          <ThemeProvider theme={theme}>\n            <MyPaper>\n              <IconButtonStyled color=\"secondary\">\n                <Icon>close</Icon>\n              </IconButtonStyled>\n\n              <MainContainerStyled elevation={1}>\n                <ExportOptionHeaderStyled>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Export Option\n                  </Typography>\n\n                  <ExportOptionSelectStyled>\n                    {/* <InputLabel htmlFor=\"select-multiple\">Export Option</InputLabel> */}\n                    <Select\n                      multiple\n                      onChange={this.exportOptionOnChangeHandler}\n                      renderValue={selected => (\n                        <div className={classes.chips}>\n                          {selected.map(value => (\n                            <Chip key={value} label={value} />\n                          ))}\n                        </div>\n                      )}\n                      value={this.state.selectedExportOption}\n                      input={<Input id=\"select-multiple\" />}\n                      MenuProps={MenuProps}\n                    >\n                      {this.exportOptions.map(option => (\n                        <MenuItem key={option.label} value={option.value}>\n                          {option.label}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </ExportOptionSelectStyled>\n                </ExportOptionHeaderStyled>\n                <ExportFieldSelectionContainerStyled>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Export Field Selection\n                  </Typography>\n\n                  <SelectionListContainerStyled>\n                    <ColumnSelectionListStyled>\n                      <ListItem onClick={this.selectAllHandler}>\n                        Select All\n                      </ListItem>\n                      {this.state.columnsDetail.map(column => (\n                        <ListItem\n                          key={column.columnName}\n                          button\n                          className={classes.listItemOverride}\n                        >\n                          <CheckableItem\n                            onSelectionChange={this.columnSelectionHandler(\n                              column\n                            )}\n                            label={column.columnName}\n                            selected={column.isSelected}\n                          />\n                        </ListItem>\n                      ))}\n                    </ColumnSelectionListStyled>\n\n                    <RegionSelectionListStyled>\n                      {[0, 1, 2, 3].map(value => (\n                        <ListItem\n                          key={value}\n                          button\n                          className={classes.listItemOverride}\n                        >\n                          <CheckableItem\n                            onSelectionChange={this.columnSelectionHandler(\n                              value\n                            )}\n                            label={`Line item ${value + 1}`}\n                            selected={\n                              this.state.selectedColumns.indexOf(value) !== -1\n                            }\n                          />\n                        </ListItem>\n                      ))}\n                    </RegionSelectionListStyled>\n                  </SelectionListContainerStyled>\n                </ExportFieldSelectionContainerStyled>\n              </MainContainerStyled>\n            </MyPaper>\n          </ThemeProvider>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nExportModal.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n// We need an intermediary variable for handling the recursive nesting.\nconst ExportModalWrapped = withStyles(styles)(ExportModal);\n\nexport default ExportModalWrapped;\n"],"names":["MainContainer","styled","div","props","selected","SelectIcon","Icon","styles","CheckableItem","clickHandler","onSelectionChange","label","React","Component","CheckableItemWrapped","withStyles","IconButtonStyled","IconButton","MainContainerStyled","Paper","theme","elevation","MyPaper","palette","background","paper","shadows","spacing","unit","ExportOptionHeaderStyled","ExportOptionSelectStyled","FormControl","ExportFieldSelectionContainerStyled","SelectionListContainerStyled","ColumnSelectionListStyled","List","RegionSelectionListStyled","createMuiTheme","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","ExportModal","exportOptions","closeModal","setState","modalIsOpen","exportOptionOnChangeHandler","event","target","value","selectAllHandler","columns","state","columnsDetail","map","isSelected","column","columnSelectionHandler","currentIndex","findIndex","columnName","selectedColumn","nextProps","log","modalProps","open","classes","chips","selectedExportOption","option","listItemOverride","selectedColumns","indexOf","propTypes","PropTypes","object","isRequired","ExportModalWrapped"],"mappings":"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"}